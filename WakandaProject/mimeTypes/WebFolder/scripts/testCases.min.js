"use strict";(({define:typeof define=="function"?define:function(a,b){var c=b.apply(null,a.map(require));Object.keys(c).forEach(function(a){exports[a]=c[a]})}})).define(["mimeTypes"],function(a){var b={};return b.get=function(){var c={name:"mimeTypes Tests",_should:{error:{"test throwing an exception for an unrecognized file name":!0,"test throwing an exception for an unrecognized hidden file name":!0,"test throwing an exception for an unrecognized extension":!0}},"test get MIME types from file extensions":function(){Y.Assert.areSame(a.lookup("test.jpg"),"image/jpeg",".jpg extension should result in 'image/jpeg'"),Y.Assert.areSame(a.lookup("test.pdf"),"application/pdf",".pdf extension should result in 'application/pdf'"),Y.Assert.areSame(a.lookup("test.123"),"application/vnd.lotus-1-2-3",".123 extension should result in 'application/vnd.lotus-1-2-3'")},"test get MIME types from file names":function(){Y.Assert.areSame(a.lookup("README"),"text/plain","README file name should result in 'text/plain'"),Y.Assert.areSame(a.lookup("manifest"),"text/cache-manifest","manifest file name should result in 'text/cache-manifest'"),Y.Assert.areSame(a.lookup("TODO"),"text/plain","TODO file name should result in 'text/plain'")},"test get MIME types from file names that start with a period":function(){Y.Assert.areSame(a.lookup(".manifest"),"text/cache-manifest",".manifest file name should result in 'text/cache-manifest'")},"test throwing an exception for an unrecognized file name":function(){a.lookup("junk")},"test throwing an exception for an unrecognized hidden file name":function(){a.lookup(".junk")},"test throwing an exception for an unrecognized extension":function(){a.lookup("junk.zzz")},"test returning a default MIME type for an unrecognized file name/extension":function(){a.setDefaultMimeType("text/unknown"),Y.Assert.areSame(a.lookup("junk"),"text/unknown","should return default MIME type for an unrecognized file name"),Y.Assert.areSame(a.lookup(".junk"),"text/unknown","should return default MIME type for an unrecognized file name which begins with a period"),Y.Assert.areSame(a.lookup("junk.zzz"),"text/unknown","should return default MIME type for an unrecognized file extension")}};return c},b})